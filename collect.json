{"original": "https://prover.certora.com/jobStatus/92857/00db0e5678114b03b5a8a3229ab84af1?anonymousKey=2f9641d7d676896bb26a95430fa80f4d1f415608", "mutants": [{"gambit_mutant": {"filename": "gambit_out/mutants/1/packages/contracts/contracts/CollSurplusPool.sol", "original_filename": "packages/contracts/contracts/CollSurplusPool.sol", "directory": "gambit_out/mutants/1", "id": "1", "diff": "--- original\n+++ mutant\n@@ -95,7 +95,8 @@\n         uint256 claimableColl = balances[_account];\n         require(claimableColl > 0, \"CollSurplusPool: No collateral available to claim\");\n \n-        balances[_account] = 0;\n+        /// DeleteExpressionMutation(`balances[_account] = 0` |==> `assert(true)`) of: `balances[_account] = 0;`\n+        assert(true);\n         emit SurplusCollSharesUpdated(_account, 0);\n \n         uint256 cachedTotalSurplusCollShares = totalSurplusCollShares;\n", "description": "DeleteExpressionMutation"}, "link": "https://prover.certora.com/jobStatus/92857/d677d475c4fa463ea5c03a2e01cbb379?anonymousKey=82c806c7d9d658ce825552a9d695b2791ab64c04", "success": true, "run_directory": ".certora_internal/23_11_08_15_43_42_158/.certora_sources"}, {"gambit_mutant": {"filename": "gambit_out/mutants/2/packages/contracts/contracts/CollSurplusPool.sol", "original_filename": "packages/contracts/contracts/CollSurplusPool.sol", "directory": "gambit_out/mutants/2", "id": "2", "diff": "--- original\n+++ mutant\n@@ -100,7 +100,8 @@\n \n         uint256 cachedTotalSurplusCollShares = totalSurplusCollShares;\n \n-        require(cachedTotalSurplusCollShares >= claimableColl, \"!CollSurplusPoolBal\");\n+        /// RequireMutation(`cachedTotalSurplusCollShares >= claimableColl` |==> `false`) of: `require(cachedTotalSurplusCollShares >= claimableColl, \"!CollSurplusPoolBal\");`\n+        require(false, \"!CollSurplusPoolBal\");\n         // Safe per the check above\n         unchecked {\n             totalSurplusCollShares = cachedTotalSurplusCollShares - claimableColl;\n", "description": "RequireMutation"}, "link": "https://prover.certora.com/jobStatus/92857/4f58cd55f58c4740b48651a00bbff200?anonymousKey=499f908e2afb998c1b3f5f18fc1f39899bc7b6ee", "success": true, "run_directory": ".certora_internal/23_11_08_15_43_42_133/.certora_sources"}, {"gambit_mutant": {"filename": "gambit_out/mutants/3/packages/contracts/contracts/CollSurplusPool.sol", "original_filename": "packages/contracts/contracts/CollSurplusPool.sol", "directory": "gambit_out/mutants/3", "id": "3", "diff": "--- original\n+++ mutant\n@@ -103,7 +103,8 @@\n         require(cachedTotalSurplusCollShares >= claimableColl, \"!CollSurplusPoolBal\");\n         // Safe per the check above\n         unchecked {\n-            totalSurplusCollShares = cachedTotalSurplusCollShares - claimableColl;\n+            /// DeleteExpressionMutation(`totalSurplusCollShares = cachedTotalSurplusCollShares - claimableColl` |==> `assert(true)`) of: `totalSurplusCollShares = cachedTotalSurplusCollShares - claimableColl;`\n+            assert(true);\n         }\n         emit CollSharesTransferred(_account, claimableColl);\n \n", "description": "DeleteExpressionMutation"}, "link": "https://prover.certora.com/jobStatus/92857/1c5f07b1a0a34512ac458905467451f7?anonymousKey=ba712ea98e87abfc403aa051e0fdd54b9f471ed3", "success": true, "run_directory": ".certora_internal/23_11_08_15_43_42_276/.certora_sources"}, {"gambit_mutant": {"filename": "gambit_out/mutants/4/packages/contracts/contracts/CollSurplusPool.sol", "original_filename": "packages/contracts/contracts/CollSurplusPool.sol", "directory": "gambit_out/mutants/4", "id": "4", "diff": "--- original\n+++ mutant\n@@ -103,7 +103,8 @@\n         require(cachedTotalSurplusCollShares >= claimableColl, \"!CollSurplusPoolBal\");\n         // Safe per the check above\n         unchecked {\n-            totalSurplusCollShares = cachedTotalSurplusCollShares - claimableColl;\n+            /// BinaryOpMutation(`-` |==> `/`) of: `totalSurplusCollShares = cachedTotalSurplusCollShares - claimableColl;`\n+            totalSurplusCollShares = cachedTotalSurplusCollShares/claimableColl;\n         }\n         emit CollSharesTransferred(_account, claimableColl);\n \n", "description": "BinaryOpMutation"}, "link": "https://prover.certora.com/jobStatus/92857/da87c9a886e04eccaefe936e25d36b55?anonymousKey=e21829d527efb7800b909903985fce8f19b339b9", "success": true, "run_directory": ".certora_internal/23_11_08_15_43_42_872/.certora_sources"}, {"gambit_mutant": {"filename": "gambit_out/mutants/5/packages/contracts/contracts/CollSurplusPool.sol", "original_filename": "packages/contracts/contracts/CollSurplusPool.sol", "directory": "gambit_out/mutants/5", "id": "5", "diff": "--- original\n+++ mutant\n@@ -114,7 +114,8 @@\n     // --- 'require' functions ---\n \n     function _requireCallerIsBorrowerOperations() internal view {\n-        require(msg.sender == borrowerOperationsAddress, \"CollSurplusPool: Caller is not Borrower Operations\");\n+        /// RequireMutation(`msg.sender == borrowerOperationsAddress` |==> `true`) of: `require(msg.sender == borrowerOperationsAddress, \"CollSurplusPool: Caller is not Borrower Operations\");`\n+        require(true, \"CollSurplusPool: Caller is not Borrower Operations\");\n     }\n \n     function _requireCallerIsCdpManager() internal view {\n", "description": "RequireMutation"}, "link": "https://prover.certora.com/jobStatus/92857/92ff4ce15fce4b58940ebfebce166f5e?anonymousKey=6182e60de046f575e4c476ea64bd31f1ba8074a6", "success": true, "run_directory": ".certora_internal/23_11_08_15_43_42_602/.certora_sources"}, {"gambit_mutant": {"filename": "gambit_out/mutants/6/packages/contracts/contracts/CollSurplusPool.sol", "original_filename": "packages/contracts/contracts/CollSurplusPool.sol", "directory": "gambit_out/mutants/6", "id": "6", "diff": "--- original\n+++ mutant\n@@ -118,7 +118,8 @@\n     }\n \n     function _requireCallerIsCdpManager() internal view {\n-        require(msg.sender == cdpManagerAddress, \"CollSurplusPool: Caller is not CdpManager\");\n+        /// RequireMutation(`msg.sender == cdpManagerAddress` |==> `false`) of: `require(msg.sender == cdpManagerAddress, \"CollSurplusPool: Caller is not CdpManager\");`\n+        require(false, \"CollSurplusPool: Caller is not CdpManager\");\n     }\n \n     function _requireCallerIsActivePool() internal view {\n", "description": "RequireMutation"}, "link": "https://prover.certora.com/jobStatus/92857/4847e6dab2e24444b703d066fd50c3ce?anonymousKey=84b5c808923c28f7ec4881992fb62492bd1646e6", "success": true, "run_directory": ".certora_internal/23_11_08_15_43_42_827/.certora_sources"}, {"gambit_mutant": {"filename": "gambit_out/mutants/7/packages/contracts/contracts/CollSurplusPool.sol", "original_filename": "packages/contracts/contracts/CollSurplusPool.sol", "directory": "gambit_out/mutants/7", "id": "7", "diff": "--- original\n+++ mutant\n@@ -122,7 +122,8 @@\n     }\n \n     function _requireCallerIsActivePool() internal view {\n-        require(msg.sender == activePoolAddress, \"CollSurplusPool: Caller is not Active Pool\");\n+        /// RequireMutation(`msg.sender == activePoolAddress` |==> `false`) of: `require(msg.sender == activePoolAddress, \"CollSurplusPool: Caller is not Active Pool\");`\n+        require(false, \"CollSurplusPool: Caller is not Active Pool\");\n     }\n \n     /// @notice Increase total collateral surplus balance by _value\n", "description": "RequireMutation"}, "link": "https://prover.certora.com/jobStatus/92857/071919d41512454095f58dfd91ec7040?anonymousKey=168ab302b5948ac9ac55c340b5f8c79d18987a6e", "success": true, "run_directory": ".certora_internal/23_11_08_15_43_42_570/.certora_sources"}, {"gambit_mutant": {"filename": "gambit_out/mutants/8/packages/contracts/contracts/CollSurplusPool.sol", "original_filename": "packages/contracts/contracts/CollSurplusPool.sol", "directory": "gambit_out/mutants/8", "id": "8", "diff": "--- original\n+++ mutant\n@@ -141,7 +141,8 @@\n     /// @param token The token to be swept\n     /// @param amount The token value to be swept\n     function sweepToken(address token, uint256 amount) public nonReentrant requiresAuth {\n-        require(token != address(collateral), \"CollSurplusPool: Cannot Sweep Collateral\");\n+        /// RequireMutation(`token != address(collateral)` |==> `true`) of: `require(token != address(collateral), \"CollSurplusPool: Cannot Sweep Collateral\");`\n+        require(true, \"CollSurplusPool: Cannot Sweep Collateral\");\n \n         uint256 balance = IERC20(token).balanceOf(address(this));\n         require(amount <= balance, \"CollSurplusPool: Attempt to sweep more than balance\");\n", "description": "RequireMutation"}, "link": "https://prover.certora.com/jobStatus/92857/f3054858ef8a4954a0c9084e3d50d57d?anonymousKey=07dbc024fdaf615f6bad1075c025b83e02130ebd", "success": true, "run_directory": ".certora_internal/23_11_08_15_43_42_818/.certora_sources"}, {"gambit_mutant": {"filename": "gambit_out/mutants/9/packages/contracts/contracts/CollSurplusPool.sol", "original_filename": "packages/contracts/contracts/CollSurplusPool.sol", "directory": "gambit_out/mutants/9", "id": "9", "diff": "--- original\n+++ mutant\n@@ -141,7 +141,8 @@\n     /// @param token The token to be swept\n     /// @param amount The token value to be swept\n     function sweepToken(address token, uint256 amount) public nonReentrant requiresAuth {\n-        require(token != address(collateral), \"CollSurplusPool: Cannot Sweep Collateral\");\n+        /// RequireMutation(`token != address(collateral)` |==> `false`) of: `require(token != address(collateral), \"CollSurplusPool: Cannot Sweep Collateral\");`\n+        require(false, \"CollSurplusPool: Cannot Sweep Collateral\");\n \n         uint256 balance = IERC20(token).balanceOf(address(this));\n         require(amount <= balance, \"CollSurplusPool: Attempt to sweep more than balance\");\n", "description": "RequireMutation"}, "link": "https://prover.certora.com/jobStatus/92857/071335ca0ac5416c93827c2f57df7eb9?anonymousKey=4c4113e129b00b024d55eed7e1c4d050fb8aa281", "success": true, "run_directory": ".certora_internal/23_11_08_15_43_42_231/.certora_sources"}, {"gambit_mutant": {"filename": "gambit_out/mutants/10/packages/contracts/contracts/CollSurplusPool.sol", "original_filename": "packages/contracts/contracts/CollSurplusPool.sol", "directory": "gambit_out/mutants/10", "id": "10", "diff": "--- original\n+++ mutant\n@@ -144,7 +144,8 @@\n         require(token != address(collateral), \"CollSurplusPool: Cannot Sweep Collateral\");\n \n         uint256 balance = IERC20(token).balanceOf(address(this));\n-        require(amount <= balance, \"CollSurplusPool: Attempt to sweep more than balance\");\n+        /// RequireMutation(`amount <= balance` |==> `true`) of: `require(amount <= balance, \"CollSurplusPool: Attempt to sweep more than balance\");`\n+        require(true, \"CollSurplusPool: Attempt to sweep more than balance\");\n \n         IERC20(token).safeTransfer(feeRecipientAddress, amount);\n \n", "description": "RequireMutation"}, "link": "https://prover.certora.com/jobStatus/92857/944276890a524894a1ca9f245da4a17f?anonymousKey=d215790d3c3abbee02a94a7cbfa0f6b5e420d1ba", "success": true, "run_directory": ".certora_internal/23_11_08_15_43_42_288/.certora_sources"}, {"gambit_mutant": {"filename": "/Users/polarzero/_AUDITS/contests-code4rena/AUDIT-2023-10-badger/certora/confs/gambit/../../mutations/CollSurplusPool/CollSurplusPool1.sol", "original_filename": "packages/contracts/contracts/CollSurplusPool.sol", "directory": "/Users/polarzero/_AUDITS/contests-code4rena/AUDIT-2023-10-badger/certora/confs/gambit/../../mutations/CollSurplusPool", "id": "m1", "diff": "19,20d18\n<     address TRACKER;\n< \n93,94d90\n<         TRACKER = borrowerOperationsAddress;\n<         TRACKER = msg.sender;\n149c145,151\n<         IERC20(token).safeTransfer(feeRecipientAddress, amount);\n---\n>         /// @audit But won't this revert if the token is not approved? Meaning it will silence it and\n>         /// not consider the mutation?\n>         // MUTATION\n>         // IERC20(token).safeTransfer(feeRecipientAddress, amount);\n>         // changed to\n>         // IERC20(token).safeTransferFrom(msg.sender,feeRecipientAddress, amount);\n>         IERC20(token).safeTransferFrom(msg.sender, feeRecipientAddress, amount);\n", "description": "/Users/polarzero/_AUDITS/contests-code4rena/AUDIT-2023-10-badger/certora/confs/gambit/../../mutations/CollSurplusPool/CollSurplusPool1.sol"}, "link": "https://prover.certora.com/jobStatus/92857/3ca6ed9f5556492e81186be97195ea5e?anonymousKey=d85dcf53859eb072e3639a59f56df52c930d71da", "success": true, "run_directory": ".certora_internal/23_11_08_15_43_53_348/.certora_sources"}]}